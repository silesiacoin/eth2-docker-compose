// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/beacon/db/finalized_block_root_container.proto

package db

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	proto "github.com/gogo/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type FinalizedBlockRootContainer struct {
	ParentRoot           []byte   `protobuf:"bytes,1,opt,name=parent_root,json=parentRoot,proto3" json:"parent_root,omitempty"`
	ChildRoot            []byte   `protobuf:"bytes,2,opt,name=child_root,json=childRoot,proto3" json:"child_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinalizedBlockRootContainer) Reset()         { *m = FinalizedBlockRootContainer{} }
func (m *FinalizedBlockRootContainer) String() string { return proto.CompactTextString(m) }
func (*FinalizedBlockRootContainer) ProtoMessage()    {}
func (*FinalizedBlockRootContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_f952363f5bc83b7b, []int{0}
}
func (m *FinalizedBlockRootContainer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FinalizedBlockRootContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FinalizedBlockRootContainer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FinalizedBlockRootContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalizedBlockRootContainer.Merge(m, src)
}
func (m *FinalizedBlockRootContainer) XXX_Size() int {
	return m.Size()
}
func (m *FinalizedBlockRootContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalizedBlockRootContainer.DiscardUnknown(m)
}

var xxx_messageInfo_FinalizedBlockRootContainer proto.InternalMessageInfo

func (m *FinalizedBlockRootContainer) GetParentRoot() []byte {
	if m != nil {
		return m.ParentRoot
	}
	return nil
}

func (m *FinalizedBlockRootContainer) GetChildRoot() []byte {
	if m != nil {
		return m.ChildRoot
	}
	return nil
}

func init() {
	proto.RegisterType((*FinalizedBlockRootContainer)(nil), "prysm.beacon.db.FinalizedBlockRootContainer")
}

func init() {
	proto.RegisterFile("proto/beacon/db/finalized_block_root_container.proto", fileDescriptor_f952363f5bc83b7b)
}

var fileDescriptor_f952363f5bc83b7b = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4a, 0x4d, 0x4c, 0xce, 0xcf, 0xd3, 0x4f, 0x49, 0xd2, 0x4f, 0xcb, 0xcc, 0x4b,
	0xcc, 0xc9, 0xac, 0x4a, 0x4d, 0x89, 0x4f, 0xca, 0xc9, 0x4f, 0xce, 0x8e, 0x2f, 0xca, 0xcf, 0x2f,
	0x89, 0x4f, 0xce, 0xcf, 0x2b, 0x49, 0xcc, 0xcc, 0x4b, 0x2d, 0xd2, 0x03, 0x2b, 0x17, 0xe2, 0x2f,
	0x28, 0xaa, 0x2c, 0xce, 0xd5, 0x83, 0xe8, 0xd2, 0x4b, 0x49, 0x52, 0x8a, 0xe5, 0x92, 0x76, 0x83,
	0x69, 0x74, 0x02, 0xe9, 0x0b, 0xca, 0xcf, 0x2f, 0x71, 0x86, 0xe9, 0x12, 0x92, 0xe7, 0xe2, 0x2e,
	0x48, 0x2c, 0x4a, 0xcd, 0x2b, 0x01, 0x1b, 0x27, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x13, 0xc4, 0x05,
	0x11, 0x02, 0xa9, 0x14, 0x92, 0xe5, 0xe2, 0x4a, 0xce, 0xc8, 0xcc, 0x49, 0x81, 0xc8, 0x33, 0x81,
	0xe5, 0x39, 0xc1, 0x22, 0x20, 0x69, 0x27, 0x9b, 0x13, 0x8f, 0xe4, 0x18, 0x2f, 0x3c, 0x92, 0x63,
	0x7c, 0xf0, 0x48, 0x8e, 0x31, 0x4a, 0x2f, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f,
	0x57, 0x1f, 0xec, 0x90, 0xc4, 0x92, 0xcc, 0xe4, 0x9c, 0xc4, 0xa4, 0x62, 0x08, 0x4f, 0x1f, 0xcd,
	0x4b, 0x49, 0x6c, 0x60, 0x01, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xd3, 0xda, 0x04,
	0xec, 0x00, 0x00, 0x00,
}

func (m *FinalizedBlockRootContainer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FinalizedBlockRootContainer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FinalizedBlockRootContainer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ChildRoot) > 0 {
		i -= len(m.ChildRoot)
		copy(dAtA[i:], m.ChildRoot)
		i = encodeVarintFinalizedBlockRootContainer(dAtA, i, uint64(len(m.ChildRoot)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ParentRoot) > 0 {
		i -= len(m.ParentRoot)
		copy(dAtA[i:], m.ParentRoot)
		i = encodeVarintFinalizedBlockRootContainer(dAtA, i, uint64(len(m.ParentRoot)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintFinalizedBlockRootContainer(dAtA []byte, offset int, v uint64) int {
	offset -= sovFinalizedBlockRootContainer(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FinalizedBlockRootContainer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ParentRoot)
	if l > 0 {
		n += 1 + l + sovFinalizedBlockRootContainer(uint64(l))
	}
	l = len(m.ChildRoot)
	if l > 0 {
		n += 1 + l + sovFinalizedBlockRootContainer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovFinalizedBlockRootContainer(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFinalizedBlockRootContainer(x uint64) (n int) {
	return sovFinalizedBlockRootContainer(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FinalizedBlockRootContainer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFinalizedBlockRootContainer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FinalizedBlockRootContainer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FinalizedBlockRootContainer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentRoot", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizedBlockRootContainer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthFinalizedBlockRootContainer
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizedBlockRootContainer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentRoot = append(m.ParentRoot[:0], dAtA[iNdEx:postIndex]...)
			if m.ParentRoot == nil {
				m.ParentRoot = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChildRoot", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizedBlockRootContainer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthFinalizedBlockRootContainer
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizedBlockRootContainer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChildRoot = append(m.ChildRoot[:0], dAtA[iNdEx:postIndex]...)
			if m.ChildRoot == nil {
				m.ChildRoot = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFinalizedBlockRootContainer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthFinalizedBlockRootContainer
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthFinalizedBlockRootContainer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFinalizedBlockRootContainer(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFinalizedBlockRootContainer
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFinalizedBlockRootContainer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFinalizedBlockRootContainer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFinalizedBlockRootContainer
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFinalizedBlockRootContainer
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFinalizedBlockRootContainer
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFinalizedBlockRootContainer        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFinalizedBlockRootContainer          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFinalizedBlockRootContainer = fmt.Errorf("proto: unexpected end of group")
)
